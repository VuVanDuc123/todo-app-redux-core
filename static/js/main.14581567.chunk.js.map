{"version":3,"sources":["components/Todo/index.js","redux/actions.js","redux/selectors.js","components/TodoList/index.js","components/Filters/index.js","App.js","components/Filters/filterReducerSlice.js","components/TodoList/todoReducerSlice.js","redux/reducers.js","redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","id","name","prioriry","completed","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","type","payload","color","margin","todoRemainingSelector","createSelector","state","todoList","filters","search","status","priorities","searchText","filter","todo","length","includes","TodoList","todoName","setTodoName","setPrioriry","useSelector","inputRef","useRef","height","span","overflowY","map","Group","display","compact","e","target","value","ref","defaultValue","Option","label","onClick","uuidv4","current","focus","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initialState","filtersReducer","action","todoListReducer","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14581567.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\n// dispatch: gửi đi cập nhât lại\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleTodoStatus } from \"../../redux/actions\";\r\n\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({id, name, prioriry, completed }) {\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(toggleTodoStatus(id))// cài đặt lại toggle cho todo có id = ...\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n        {prioriry}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","export const addTodo = (data) => {\r\n  return {\r\n    type: \"todoList/addTodo\",\r\n    payload: data,\r\n  };\r\n};\r\n// hoàn thành hay chưa hoàn thành completed, todo\r\nexport const toggleTodoStatus = (todoId) => {\r\n  return {\r\n    type: \"todoList/toggleTodoStatus\",\r\n    payload: todoId,\r\n  };\r\n};\r\n\r\nexport const searchFilterChanges = (text) => {\r\n  return {\r\n    type: \"filters/searchFilterChange\",\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const statusFilterChanges = (status) => {\r\n  return {\r\n    type: \"filters/statusFilterChanges\",\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const prioritiesFilterChanges = (priorities) => {\r\n  return {\r\n    type: \"filters/priorityFilterChanges\",\r\n    payload: priorities,\r\n  };\r\n};\r\n","// export const todoListSelector = (state) => {\r\n//   const searchText = searchTextSelector(state);\r\n\r\n//   const todoRemaining = state.todoList.filter((todo) =>\r\n//     todo.name.includes(searchText)\r\n//   );\r\n//   return todoRemaining;\r\n// }; // xuất ra kết hợp với search\r\n\r\n// export const searchTextSelector = (state) => {\r\n//   return state.filters.search;\r\n// };\r\n\r\n// dùng reselect sẽ gộp lại selector rất là tiện\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const todoListSelector = (state) => state.todoList;\r\nexport const searchTextSelector = (state) => state.filters.search;\r\nexport const filterStatusSelector = (state) => state.filters.status;\r\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\r\n\r\nexport const todoRemainingSelector = createSelector(\r\n  todoListSelector,\r\n  searchTextSelector,\r\n  filterStatusSelector,\r\n  filterPrioritiesSelector,\r\n  (todoList, searchText, status, priorities) => {\r\n    // status: 'all', 'completed', 'todo'\r\n    return todoList.filter((todo) => {\r\n      if (status === \"All\") {\r\n        return priorities.length\r\n          ? todo.name.includes(searchText) && priorities.includes(todo.prioriry)//text,...-All-Medium,...\r\n          : todo.name.includes(searchText);\r\n      }\r\n      return (\r\n        todo.name.includes(searchText) &&\r\n        (status === \"Completed\" ? todo.completed : !todo.completed) &&\r\n        (priorities.length ? priorities.includes(todo.prioriry) : true)//text=...,-Completed,todo-...\r\n      );\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport { useState, useRef } from \"react\";\r\nimport Todo from \"../Todo\";\r\n\r\n// sử dụng dispatch gửi đi\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\n\r\n// action\r\nimport { addTodo } from \"../../redux/actions\";\r\n// import { todoListSelector } from \"../../redux/selectors\";// lấy selector\r\nimport { todoRemainingSelector } from \"../../redux/selectors\";\r\n\r\n// id ngẫu nhiên từ uuid\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState(\"\");\r\n  const [prioriry, setPrioriry] = useState(\"Medium\");\r\n\r\n  const dispatch = useDispatch();\r\n  // const todoList = useSelector(todoListSelector);// xuất giá trị\r\n  const todoList = useSelector(todoRemainingSelector); // xuất giá trị\r\n\r\n  const inputRef = useRef();\r\n\r\n  // console.log([uuidv4('hex')]);\r\n\r\n  const handleOnClickAddTodoList = () => {\r\n    dispatch(\r\n      addTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        prioriry: prioriry,\r\n        completed: false,\r\n      })\r\n    );\r\n\r\n    setTodoName(\"\");\r\n    setPrioriry(\"Medium\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24} style={{ height: \"calc(100% - 40px)\", overflowY: \"auto\" }}>\r\n        {/* xuất ra todoList */}\r\n        {todoList.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            prioriry={todo.prioriry}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input\r\n            onChange={(e) => setTodoName(e.target.value)}\r\n            value={todoName}\r\n            ref={inputRef}\r\n          />\r\n          {/* thay đổi input */}\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={prioriry}\r\n            onChange={(value) => setPrioriry(value)}\r\n          >\r\n            {/*thay đổi select */}\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleOnClickAddTodoList}>\r\n            {/* xử lý click add*/}\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\n// gửi dispatch đi\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchFilterChanges, statusFilterChanges, prioritiesFilterChanges } from \"../../redux/actions\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"All\");\r\n  const [filterPriorities, setFilterPriorities] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(searchFilterChanges(e.target.value));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(statusFilterChanges(e.target.value));\r\n  };\r\n\r\n  const handlePrioritiesChange = (value) => {\r\n    setFilterPriorities(value)\r\n    dispatch(prioritiesFilterChanges(value));\r\n  }\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          value={searchText}\r\n          onChange={handleSearchTextChange}\r\n        />\r\n        {/* tìm kiếm search */}\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          {/* chỉnh sửa radio button*/}\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n          value={filterPriorities}\r\n          onChange={handlePrioritiesChange}\r\n        >\r\n          {/* thay đổi của priorities */}\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport Filters from './components/Filters';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        boxShadow: '0 0 10px 4px #bfbfbf',\r\n        borderRadius: 5,\r\n        height: '90vh',\r\n      }}\r\n    >\r\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX CORE</Title>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  search: \"\",\r\n  status: \"All\",\r\n  priorities: [],\r\n};\r\nconst filtersReducer = (state = initialState, action) => {\r\n  // console.log(state, action);\r\n  switch (action.type) {\r\n    case \"filters/searchFilterChange\":\r\n      return {\r\n        ...state,\r\n        search: action.payload,\r\n      };\r\n    case \"filters/statusFilterChanges\":\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case \"filters/priorityFilterChanges\":\r\n      return {\r\n        ...state,\r\n        priorities: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","const initialState = [\r\n  { id: 1, name: \"Học reactjs\", completed: false, prioriry: \"Medium\" },\r\n  { id: 2, name: \"Học Võ\", completed: true, prioriry: \"High\" },\r\n  { id: 3, name: \"Học Redux toolkit\", completed: false, prioriry: \"Low\" },\r\n];\r\n\r\nconst todoListReducer = (state = initialState, action) => {\r\n  // console.log(state, action);\r\n  switch (action.type) {\r\n    case \"todoList/addTodo\":\r\n      return [...state, action.payload];\r\n\r\n    case \"todoList/toggleTodoStatus\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      );//nếu id=payload thì completed = !completed : todo\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoListReducer;\r\n","// vì khi ta làm nó sẽ rất nhiều nên ta dùng sliceReducer để phân nhỏ nó đi\r\n\r\n// const initialState = {\r\n//   filters: {\r\n//     search: \"\",\r\n//     status: \"All\",\r\n//     priorities: [],\r\n//   },\r\n//   todoList: [\r\n//     { id: 1, name: \"Học reactjs\", completed: false, prioriry: \"Medium\" },\r\n//     { id: 2, name: \"Học Võ\", completed: true, prioriry: \"High\" },\r\n//     { id: 3, name: \"Học Redux toolkit\", completed: false, prioriry: \"Low\" },\r\n//   ],\r\n// };\r\n// const rootReducer = (state = initialState, action) => {\r\n//   console.log(state, action);\r\n//   switch (action.type) {\r\n//     case \"todoList/addTodo\":\r\n//       return {\r\n//         ...state,\r\n//         todoList: [...state.todoList, action.payload],\r\n//       };\r\n\r\n//     case \"filter/searchFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         filters: {\r\n//           ...state.filters,\r\n//           search: action.payload,\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n/*import filtersReducer from \"../components/Filters/filterReducerSlice\";\r\nimport todoListReducer from \"../components/TodoList/todoReducerSlice\";\r\n\r\nconst rootReducer = (state = {}, action) => {\r\n  return {\r\n    filters: filtersReducer(state.filters, action),\r\n    todoList: todoListReducer(state.todoList, action),\r\n  };\r\n};\r\n\r\nexport default rootReducer;*/\r\n// rất gọn c1: tường minh\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport filtersReducer from \"../components/Filters/filterReducerSlice\";\r\nimport todoListReducer from \"../components/TodoList/todoReducerSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  filters: filtersReducer,\r\n  todoList: todoListReducer,\r\n});\r\n// c2: thu gọn lại\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composeEnhancers = composeWithDevTools(); // khi dùng redux toolkit sẽ được tích hợp vào\r\nconst store = createStore(rootReducer, composeEnhancers); // 3 tham số 1 reducer, 2 giá trị value, 3 các thư viện\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n// thêm store vào\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}